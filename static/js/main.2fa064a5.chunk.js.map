{"version":3,"sources":["logo.svg","components/Directory.js","components/Tablet.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Directory","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","name","number","numRows","temp_id","update_event","temp_data","id","data","Update","bind","assertThisInitialized","Delete","handleClick","handleNameChange","handleNumberChange","handleUpNameChange","handleUpNumberChange","Update_rec","event","setState","target","value","length","concat","console","log","alert","_this2","prevState","filter","el","_this3","_this4","_this5","react_default","a","createElement","border","class","map","dynamicComponent","onClick","type","onChange","Component","Tablet","src_components_Directory","App","className","components_Tablet","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2fa064a5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from 'react';\r\nimport './Directory.css'\r\n\r\nclass Directory extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n          \r\n        this.state = {\r\n            name:'',\r\n            number:'',\r\n            numRows:4,\r\n            temp_id:0,\r\n            update_event:false,\r\n            temp_data:[{}],\r\n            id:4,\r\n           data:[\r\n              {\r\n                 id:1,\r\n                 name:'sid',\r\n                 number:'7069499460'\r\n              },\r\n              {\r\n                id:2,\r\n                name:'meet',\r\n                number:'9979612177'\r\n             },\r\n             \r\n             {\r\n                id:3,\r\n                name:'abc',\r\n                number:'7567561477'\r\n             }\r\n           ]\r\n\r\n        }\r\n        this.Update = this.Update.bind(this); \r\n        // this.handleClick = this.handleClick.bind(this);\r\n        this.Delete = this.Delete.bind(this);\r\n        this.handleClick = this.handleClick.bind(this);\r\n        this.handleNameChange = this.handleNameChange.bind(this);\r\n        this.handleNumberChange = this.handleNumberChange.bind(this);\r\n        this.handleUpNameChange = this.handleUpNameChange.bind(this);\r\n        this.handleUpNumberChange = this.handleUpNumberChange.bind(this);\r\n        this.Update_rec = this.Update_rec.bind(this);\r\n    }\r\n  \r\n    handleNameChange(event) {\r\n        this.setState({name: event.target.value});\r\n        \r\n        //  console.log(val);\r\n      }\r\n    \r\n      handleNumberChange(event) {\r\n        \r\n        this.setState({number: event.target.value});    \r\n    //    alert(event.target.value);\r\n      }\r\n    \r\n      handleUpNameChange(event) {\r\n        \r\n        this.setState({temp_data : [{name : event.target.value, number : this.state.temp_data[0].number}]})\r\n        //  console.log(val);\r\n      }\r\n    \r\n      handleUpNumberChange(event) {\r\n        \r\n        this.setState({temp_data : [{number : event.target.value , name : this.state.temp_data[0].name}]})\r\n    //    alert(event.target.value);\r\n      }\r\n    \r\n    \r\n\r\n      handleClick() {\r\n          if(this.state.name != '' && this.state.number.length>=10){\r\n        // alert(this.state.name + this.state.number);\r\n        this.setState({ \r\n            // num_r : this.state.data.filter(data => data.display),\r\n         numRows :this.state.data.length+2,\r\n        \r\n            data: this.state.data.concat([{id:this.state.id,name:this.state.name,number:this.state.number}]),\r\n            name:'',\r\n            number:'',\r\n            id:this.state.id+1\r\n          });\r\n          console.log(this.numRows);\r\n        }\r\n        else\r\n        {\r\n            // alert(\"Enter Valid Data: Your Name Can no be null and Number should Contain atleast 10 digits\");\r\n            if(this.state.name=='' && this.state.number.length>10)\r\n            alert(\"Name Can Not be null\");\r\n            else if(this.state.name!='' && this.state.number.length<10)\r\n            alert(\"Number should contain atleast 10 digits\");\r\n            else if(this.state.name=='' && this.state.number.length<10)\r\n            alert(\"Name Can not be null and number should contain atleast 10 digits\");\r\n        }\r\n      }\r\n\r\n    Delete(id){\r\n        // alert(id);\r\n        this.setState(prevState => ({\r\n            data: this.state.data.filter(el => el.id != id )\r\n        }));\r\n    }\r\n   \r\n// NewRecord()\r\n// {\r\n//     this.setState({ \r\n//         // num_r : this.state.data.filter(data => data.display),\r\n//      numRows :this.data.size+1,\r\n    \r\n        \r\n//       })\r\n// }\r\n\r\nUpdate_rec()\r\n{\r\n    \r\n    if(this.state.temp_data[0].name != '' && this.state.temp_data[0].number.length>=10){\r\n    this.setState(prevState => ({\r\n       \r\n        update_event:false,\r\n        \r\n        \r\n            data: this.state.data.concat([{id:this.state.id,name:this.state.temp_data[0].name,number:this.state.temp_data[0].number}]),\r\n            name:'',\r\n            number:'',\r\n            \r\n\r\n            id:this.state.id+1\r\n    }));\r\n}\r\nelse\r\n{\r\n    alert(\"Enter Valid Data: Your Name Can no be null and Number should Contain atleast 10 digits\");\r\n    // if(this.state.temp_data[0].name=='' && this.state.temp_data[0].number.length>10)\r\n    // alert(\"Name Can Not be null\");\r\n    // else if(this.state.name!='' && this.state.number.length<10)\r\n    // alert(\"Number should contain atleast 10 digits\");\r\n    // else if(this.state.name=='' && this.state.number.length<10)\r\n    // alert(\"Name Can not be null and number should contain atleast 10 digits\");\r\n}\r\n\r\n}\r\n\r\n    \r\nUpdate(id)\r\n{\r\n    console.log(id); \r\nif(this.state.update_event==false){\r\n    this.setState(prevState => ({\r\n        \r\n        temp_data: this.state.data.filter(el => el.id == id ),\r\n        name:this.state.temp_data[0].name,\r\n        number:this.state.temp_data[0].number,\r\n        temp_id : id,\r\n        update_event:true\r\n        \r\n   \r\n    }));   \r\n    this.Delete(id);\r\n}\r\nelse\r\n{\r\n    alert(\"You Can Modify Only one Record at a time\");\r\n}\r\n}\r\nrender() {\r\n    //  const membersToRender = this.state.members.filter(me/\r\n    \r\n        return (\r\n       \r\n     \r\n     \r\n     <div>\r\n\r\n   <table border=\"1\">\r\n   \r\n        <thead>\r\n          <tr>\r\n          \r\n            <th><div class=\"heading\">Name</div></th>\r\n            <th><div class=\"heading\">Mobile No.</div></th>\r\n            <th><div class=\"heading\">Operation</div></th>\r\n        \r\n        </tr>\r\n        </thead>\r\n        <tbody id=\"plan\">\r\n        {this.state.data.map((dynamicComponent) => <tr>\r\n            \r\n            <td>{dynamicComponent.name}</td>\r\n            <td>{dynamicComponent.number}</td>\r\n            <td><button class=\"button\"  onClick={() => this.Delete(dynamicComponent.id)}> Delete</button>&nbsp;<button class=\"button\"  onClick={() => this.Update(dynamicComponent.id)}> Modify </button> </td>    \r\n        </tr>)}\r\n  </tbody>\r\n      \r\n      </table>  \r\n      \r\n        { this.state.update_event ? <div>Name:-<input type=\"text\"  value={this.state.temp_data[0].name} onChange={this.handleUpNameChange} />&nbsp;Number:- <input type=\"number\" value={this.state.temp_data[0].number} onChange={this.handleUpNumberChange} />  <input type=\"button\" class=\"button\"  value=\"Update\" onClick={this.Update_rec}/> <br /><div id=\"dis\"> Name :- {this.state.temp_data[0].name} <br /> Number :- {this.state.temp_data[0].number}</div>  </div> :<div>Name:- <input type=\"text\"  value={this.state.name} onChange={this.handleNameChange} />&nbsp;Number:- <input type=\"number\" value={this.state.number} onChange={this.handleNumberChange}  /> &nbsp;<input type=\"button\" class=\"button\" value=\"Add New\" onClick={this.handleClick}/> \r\n        <br /> <div id=\"dis\">Name :- {this.state.name} <br /> Number :- {this.state.number}</div> </div> }\r\n    \r\n    </div>\r\n    \r\n        );\r\n    }\r\n  }\r\n\r\nexport default Directory;","import React from 'react';\r\n\r\nimport './Tablet.css';\r\nimport Directory from './Directory'\r\n\r\nfunction Tablet()\r\n{\r\n    return  (\r\n       <div id=\"mobile\">\r\n       <Directory />\r\n       </div>\r\n    \r\n    );\r\n}\r\n\r\nexport default Tablet;","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Tablet from './components/Tablet'\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n      <h1>Welcome to Upgrade Telephone Directory</h1>\n      <Tablet />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}